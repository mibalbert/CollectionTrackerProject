
<!doctype html>

<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Transit page</title>
		<meta name="description" content="form to add new books">
		<meta name="author" content="Alberto Paros">
		<meta name="viewport" content= "width=device-width, initial-scale=1.0">
		<link href="/style.css" type="text/css" rel="stylesheet" />
        <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
		<script type="module" src="util.js" defer></script>

    </head>
	<body>
		<header>
			<h1>Transit page</h1>
			<h2>Hi {{authorised}}</h2>
            <p><a href="/home-courier-p">Packages</a></p>
            <p><a href="/logout">Log out</a></p>
            <p><a href="/">Home</a></p>
		</header>
        <main>
            
            <p><strong>MAP:</strong></p> 
		    <div id="map"></div>
            
            <p></p>
            
            <label>Set to delivered by entering the UUID:</label>
            <form action="/home-courier-transit" method="post" enctype="multipart/form-data">
                <input type="search" name="search" id="search" >
                <input type="submit" name="submit">
            </form>

            {{#if alert}}
                <p id="alert">{{alert}}</p>
            {{/if}}


            <table>
                <thead>
                    <tr>
                        <th></th>
                        <th>Sender PostCode</th>
                        <th>Recipient PostCode</th>
                        <th>Weight</th>
                        <th>Recipient Name</th>
                        <th>Full Adress</th>
                        <th>Sender Username</th>
                        <th>Date-Time Created</th>
                        <th>Date-Time Accepted</th>
                        <th>Unique ID</th>
                        <th>Status</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                {{#each parcels}}
                    <tr>
                        <tr class="parcel-link" onclick="window.location='/parcel/{{this.uuid}}'">
                        <td><span class="emoji">ðŸ“¦</span></td>
                        <td>{{this.sender_postcode}}</td>
                        <td class="recipient_postcode">{{this.recipient_postcode}}</td>
                        <td>{{this.weight_kg}}</td>
                        <td>{{this.recipient_name}}</td>
                        <td>{{this.full_address}}</td>
                        <td>{{this.sender_username}}</td>
                        <td>{{{lol this.date_time_created}}}</td>
                        <td>{{{lol this.date_time_in_transit}}}</td>
                        <td>{{this.uuid}}</td>
                        <td>{{this.status}}</td>
                        <td>
                            <td>
                                <button name="set_deliver" onclick="location.href='home-courier-receiver-details/{{this.uuid}}'">Deliver</button>
                            </td>
                        </td>
                    </tr>	
                {{/each}}
                </tbody>
            </table>
        </main>        
		<script>  
                let geocoder;
                
                let all_address = document.getElementsByClassName('recipient_postcode');
                for(let i=0; i< all_address.length; i++){
                    
                    console.log(all_address[0].innerHTML)
                }

                function initMap() {
                const map = new google.maps.Map(document.getElementById("map"), {
                    zoom: 12,
                    center: { lat: 34.84555, lng: -111.8035 },
                });

                ///get the lat lng into this one    
                const tourStops = [
                    [{ lat: 34.8791806, lng: -111.8265049 }, "Boynton Pass"],
                    [{ lat: 34.8559195, lng: -111.7988186 }, "Airport Mesa"],
                    [{ lat: 34.832149, lng: -111.7695277 }, "Chapel of the Holy Cross"],
                    [{ lat: 34.823736, lng: -111.8001857 }, "Red Rock Crossing"],
                    [{ lat: 34.800326, lng: -111.7665047 }, "Bell Rock"],
                ];
                // Create an info window to share between markers.
                const infoWindow = new google.maps.InfoWindow();

                // Create the markers.
                tourStops.forEach(([position, title], i) => {
                    const marker = new google.maps.Marker({
                    position,
                    map,
                    title: `${i + 1}. ${title}`,
                    label: `${i + 1}`,
                    optimized: false,
                    });

                    // Add a click listener for each marker, and set up the info window.
                    marker.addListener("click", () => {
                    infoWindow.close();
                    infoWindow.setContent(marker.getTitle());
                    infoWindow.open(marker.getMap(), marker);
                    });
                });
                }

                window.initMap = initMap;

		</script>


        <footer>
            <p>This is the footer</p>
        </footer>


	<script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMN0tTYpnYsYcy62DPJoLB_bqZqHnNVDU&callback=initMap&v=weekly"
	  defer
	></script>
		
	</body>
	
</html>

