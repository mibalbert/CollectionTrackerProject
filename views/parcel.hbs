
<!doctype html>

<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<title>Parcel Details</title>
		<meta name="description" content="Individual parcel details">
		<meta name="author" content="Alberto Paros">
		<meta name="viewport" content= "width=device-width, initial-scale=1.0">
		<link href="/style.css" type="text/css" rel="stylesheet" />
		{{!-- <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script> --}}
		{{!-- <script type="module/javascript" src="geo-maps.js" defer></script> --}}
	</head>
	<body>
		<header>
			<h1>Parcel Details</h1>
			{{#if authorised}}
				{{#if role.customer}}
					<p><a href="/send">Send üì¶</a></p>
					<p><a href="/home-customer">Sended</a></p>	
				{{/if}}
				{{#if role.courier}}
					<p><a href="/home-courier-p">Packages</a></p>
					<p><a href="/home-courier-transit">Transit</a></p>
				{{/if}}
				{{#if role.admin}}
					<p><a href="/home-admin-c">Couriers List</a></p>
					<p><a href="/home-admin-p">Parcels List</a></p>	
				{{/if}}
					<p><a href="/logout">Log out</a></p>
			{{else}}
				<p><a href="/login">Log in</a></p>
			{{/if}}
		</header>
	<main>
		
		{{!-- <p ></p> --}}
		{{!-- <span id="lat"></span> <span id="lng"></span> --}}
			{{!-- <p style="font-size:22px">
				<strong>
				
				</strong> --}}
			{{!-- </p> --}}
		
		
		<div id="wrapper">
			<div id="left"><strong>üó∫Ô∏è Destination</strong></div>
			<div id="right">
				
				{{#each parcels}}
					<span><strong>{{this.status}}</strong></span>
				{{/each}}
			</div>
		</div>

		<div id="map"></div>

		<p>Full Parcel details.</p>

		<table>
			<thead>
				<tr>
					<th></th>
					<th>Sender Username</th>
					<th>Sender PostCode</th>
					<th>Recipient PostCode</th>
					<th>Weight</th>
					<th>Recipient Name</th>
					<th>Full Adress</th>
					<th>Date Posted</th>
					<th>Date Transit</th>
					<th>Date Delivered</th>
					<th>Unique ID</th>
					<th>Status</th>
				</tr>
			</thead>
			<tbody>
			{{#each parcels}}
				<tr>
					<td><span class="emoji">üì¶</span></td>
					<td>{{this.sender_username}}</td>
					<td>{{this.sender_postcode}}</td>
					<td>{{this.recipient_postcode}}</td>
					<td>{{this.weight_kg}}</td>
					<td>{{this.recipient_name}}</td>
					<td>{{this.full_address}}</td>
					<td>{{{lol this.date_time_created}}}</td>
					<td>{{{lol this.date_time_in_transit}}}</td>
					<td>{{{lol this.date_time_delivered}}}</td>
					<td>{{this.uuid}}</td>
					<td style="display:none" id="snd_lat">{{this.snd_lat}}</td>
                    <td style="display:none" id="snd_lng">{{this.snd_lng}}</td>
                    <td style="display:none" id="rcv_lat">{{this.rcv_lat}}</td>
                    <td style="display:none" id="rcv_lng">{{this.rcv_lng}}</td>
				</tr>		
			{{/each}}
			</tbody>
		</table>
	</main>
	<footer>
		<p>This is the footer</p>
	</footer>
	
		<script defer>

			//var geocoder;
	
			const sender_lat = document.getElementById('snd_lat')	
			const sender_lng = document.getElementById('snd_lng')
            const s_lat = sender_lat.innerHTML
            const s_lng = sender_lng.innerHTML
            const recipient_lat = document.getElementById('rcv_lat')	
			const recipient_lng = document.getElementById('rcv_lng')
            const r_lat = recipient_lat.innerHTML
            const r_lng = recipient_lng.innerHTML

			let map;
			function initMap(){
                
                const directionsRenderer = new google.maps.DirectionsRenderer()
                const directionsService = new google.maps.DirectionsService()

                const latlng = new google.maps.LatLng( s_lat, s_lng)
                //create the map
                map = new google.maps.Map(document.getElementById('map'),{
                //add settings to the map
                    zoom: 12,
                    center: latlng
                    
                });
                //Creates the marker (the little red pointer)    
			    //new google.maps.Marker({
                  //  position: latlng,
                    //map,
                    //title: "Hello World!",
                //});
            
                directionsRenderer.setMap(map)

                calculateAndDisplayRoute(directionsService, directionsRenderer)  
            
            }


            function calculateAndDisplayRoute(directionsService, directionsRenderer) {
                directionsService
                    .route({
                    origin: { lat: s_lat, lng: s_lng },
                    destination: { lat: r_lat, lng: r_lng },
                    })
                    .then((response) => {
                        directionsRenderer.setDirections(response);
                    })
                    .catch((e) => window.alert("Directions request failed due to " + status));
            }

			window.initMap = initMap;
		</script>


	  <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMN0tTYpnYsYcy62DPJoLB_bqZqHnNVDU&callback=initMap&v=weekly"
      ></script>
	
	
	</body>

	
</html>

